shader HDRColorCorrection_TextureFX : FilterBase
{
    // Exposure in stops (e.g., 0 = no change, 1 = +1 stop, -1 = -1 stop)
    float Exposure = 0.0;
    
    // Contrast multiplier (1.0 = unchanged)
    float Contrast = 1.0;
    
    // Saturation factor (1.0 = unchanged)
    float Saturation = 1.0;
    
    // White balance adjustments:
    // Temperature (range: negative = cooler, positive = warmer)
    float Temperature = 0.0;
    // Tint (range: negative = magenta, positive = green)
    float Tint = 0.0;
    
    // Lift/Gamma/Gain adjustments:
    // Lift adds an offset to the shadows (can be negative or positive)
    float3 Lift = float3(0.0, 0.0, 0.0);
    // Gamma is used for midtone correction (typically > 0; default 1.0 means no change)
    float3 Gamma = float3(1.0, 1.0, 1.0);
    // Gain scales the overall brightness (1.0 = unchanged)
    float3 Gain = float3(1.0, 1.0, 1.0);

    float4 MinCol = float4(0.0, 0.0, 0.0, 0.0); // Minimum color value
    float4 MaxCol = float4(1.0, 1.0, 1.0, 1.0); // Maximum color value

    // Function to apply a simplified white balance adjustment.
    float3 AdjustWhiteBalance(float3 color, float temperature, float tint)
    {
        // This approximation adjusts the red and blue channels using 'temperature'
        // and modifies the green channel with 'tint'. The multipliers below
        // are tunable factors for the artistâ€™s preference.
        float rMultiplier = 1.0 + temperature * 0.1;
        float bMultiplier = 1.0 - temperature * 0.1;
        float gMultiplier = 1.0 + tint * 0.1;
        return float3(color.r * rMultiplier, color.g * gMultiplier, color.b * bMultiplier);
    }

    float4 Filter(float4 tex0col)
    {
        // Assume input color is linear
        float3 color = tex0col.rgb;
        
        // 1. Exposure: multiply by 2^Exposure (exposure is in stops)
        color *= exp2(Exposure);
        
        // 2. White Balance: adjust color temperature and tint
        color = AdjustWhiteBalance(color, Temperature, Tint);
        
        // 3. Contrast: remap around mid-gray (0.5)
        color = (color - 0.5) * Contrast + 0.5;
        
        // 4. Saturation: blend with the grayscale (Rec.709 luminance)
        float luminance = dot(color, float3(0.2126, 0.7152, 0.0722));
        color = lerp(float3(luminance, luminance, luminance), color, Saturation);
        
        // 5. Lift, Gamma, Gain adjustments:
        //    a) Lift: add offset to adjust shadows (clamp to avoid negatives)
        color = max(color + Lift, 0.0001);
        //    b) Gamma: apply per-channel gamma correction; avoid division by zero
        color = pow(color, 1.0 / Gamma);
        //    c) Gain: scale the final adjusted color
        color *= Gain;
        
        // Return the final color with the original alpha, ensuring values are clamped to [0,1]
        return float4(clamp(color, MinCol, MaxCol), tex0col.a);
    }
};
